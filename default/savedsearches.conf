[update cidr network lookup]
disabled = 1
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 6 * * 1
dispatch.earliest_time = -24h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","x_virus_id","log_level","splunk_server"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = area
display.visualizations.show = 0
display.visualizations.type = mapping
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = | inputlookup vlan_inventory | lookup subnet_to_cidr subnet_mask OUTPUT cidr, binary_mask, usable_hosts | sort usable_hosts | eval cidr_address=network+cidr | outputlookup cidr_network

[update cidr network lookup - sample]
disabled = 1
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 6 * * 1
dispatch.earliest_time = -24h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","x_virus_id","log_level","splunk_server"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = area
display.visualizations.show = 0
display.visualizations.type = mapping
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = | inputlookup sample_vlan_inventory | lookup subnet_to_cidr subnet_mask OUTPUT cidr, binary_mask, usable_hosts | sort usable_hosts | eval cidr_address=network+cidr | outputlookup sample_cidr_network

[Admin - Forwarder Status]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","appid","authRequestLogin","branch","path","start","index","cq_ck","dc","date_hour","action","bytes","clientip","count","earliest","f_count","f_ns","f_pwnr","file","form_keyword_field","form_keyword_field_sec","form_index","form_field1_earliest","form_field1_latest","status","uri","uri_path","user","timestartpos","uri_query","useragent","redirecting","referer","referer_domain","ns","method","msgid","pwnr","root","spent","redirect_override","target","suser","msg","vendor","product","src","tag","cef_version","cef_severity","cef_rulename","cef_prodversion","TrendMicroDsTenantId","TrendMicroDsTenant"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
request.ui_dispatch_app = Q_Monitor
request.ui_dispatch_view = search
search = index=_internal source="*splunkd.log" NOT [| inputlookup all_servers.csv | fields host] | eval current=now() | eval age=round((current-_time)/60,2) | stats latest(current) AS "Current Time" latest(_time) AS "Latest Event" min(age) AS Age by host | convert ctime("Latest Event") ctime("Current Time") | sort -Age | rangemap default=severe field=Age low=0-10 | rename host AS Forwarder Age AS "Communicated Minutes Ago" range AS Status | table Status Forwarder "Current Time" "Latest Event" "Communicated Minutes Ago" | sort - Status " Communicated Minutes Ago"

[Admin - Index, Roles and Users Assigned]
action.email.useNSSubject = 1
alert.track = 0
description = List of Indexes Users and Roles
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = Q_Monitor
request.ui_dispatch_view = search
search = | rest /services/data/indexes | table title | rename title as index_name | eval joinfield=if(substr(index_name,1,1)="_","I","NI") | join type=left max=0 joinfield [| rest /services/authorization/roles | table title srchIndexesAllowed | rename title as Role | mvexpand srchIndexesAllowed | dedup Role, srchIndexesAllowed| eval joinfield=if(substr(srchIndexesAllowed,1,1)="_","I","NI") | rex field=srchIndexesAllowed mode=sed "s/[*]/%/g"] | where like(index_name,srchIndexesAllowed) | table index_name, Role | join type=left max=0 Role [| rest /services/authentication/users | table title , roles | mvexpand roles | rename title as User, roles as Role] | stats values(Role) AS roles values(User) AS users by index_name | eval users=mvjoin(users, " , ") | eval roles=mvjoin(roles, " , ")

[Admin - List of Alerts Fired (Audit Logs)]
action.email.useNSSubject = 1
alert.track = 0
description = From _audit Logs
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","appid","authRequestLogin","branch","path","start","index","cq_ck","dc","date_hour","action","bytes","clientip","count","earliest","f_count","f_ns","f_pwnr","file","form_keyword_field","form_keyword_field_sec","form_index","form_field1_earliest","form_field1_latest","status","uri","uri_path","user","timestartpos","uri_query","useragent","redirecting","referer","referer_domain","ns","method","msgid","pwnr","root","spent","redirect_override","target","suser","msg","vendor","product","src","tag","cef_version","cef_severity","cef_rulename","cef_prodversion","TrendMicroDsTenantId","TrendMicroDsTenant"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
display.visualizations.type = singlevalue
request.ui_dispatch_app = Q_Monitor
request.ui_dispatch_view = search
search = index=_audit action=alert_fired  | eval trigger_time_2=strftime(trigger_time,"%m/%d/%y %H:%M:%S")| table _time ss_name action severity trigger_time_2 triggered_alerts

[Admin - List of Alerts Triggered (REST API)]
action.email.useNSSubject = 1
alert.track = 0
description = Custom saved searches to go to SNoW
display.events.fields = ["host","source","sourcetype","appid","authRequestLogin","branch","path","start","index","cq_ck","dc","date_hour","action","bytes","clientip","count","earliest","f_count","f_ns","f_pwnr","file","form_keyword_field","form_keyword_field_sec","form_index","form_field1_earliest","form_field1_latest","status","uri","uri_path","user","timestartpos","uri_query","useragent","redirecting","referer","referer_domain","ns","method","msgid","pwnr","root","spent","redirect_override","target","suser","msg","vendor","product","src","tag","cef_version","cef_severity","cef_rulename","cef_prodversion","TrendMicroDsTenantId","TrendMicroDsTenant"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
request.ui_dispatch_app = Q_Monitor
request.ui_dispatch_view = search
search = | rest /servicesNS/-/-/saved/searches splunk_server=local | eval state=if(disabled=0,"Enabled","Disabled") | eval is_scheduled=if(is_scheduled=1,"Yes","No") | rename title AS savedsearch_name  | search action.snow_event=1| fields cron_schedule state  savedsearch_name, dispatch.earliest_time dispatch.latest_time action.email.sendresults action.snow_event action.snow_event.param.description action.snow_event.param.node action.snow_event.param.resource alert.severity auto_summarize.cron_schedule description is_scheduled next_scheduled_time qualifiedSearch triggered_alert_count| search state=Enabled is_scheduled=Yes | table savedsearch_name, next_scheduled_time triggered_alert_count action.snow_event action.snow_event.param.node action.snow_event.param.resource alert.severity description is_scheduled  qualifiedSearch

[Admin - List of Alerts Triggered (_ Internal)]
action.email.useNSSubject = 1
alert.track = 0
description = From (_Internal, Schedular and AlertNotifier)
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","appid","authRequestLogin","branch","path","start","index","cq_ck","dc","date_hour","action","bytes","clientip","count","earliest","f_count","f_ns","f_pwnr","file","form_keyword_field","form_keyword_field_sec","form_index","form_field1_earliest","form_field1_latest","status","uri","uri_path","user","timestartpos","uri_query","useragent","redirecting","referer","referer_domain","ns","method","msgid","pwnr","root","spent","redirect_override","target","suser","msg","vendor","product","src","tag","cef_version","cef_severity","cef_rulename","cef_prodversion","TrendMicroDsTenantId","TrendMicroDsTenant"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
display.visualizations.type = singlevalue
request.ui_dispatch_app = Q_Monitor
request.ui_dispatch_view = search
search = index="_internal" sourcetype="scheduler" thread_id="AlertNotifier*" NOT (alert_actions="summary_index" OR alert_actions="") app="qdotcom" | eval dispatch_time_2=strftime(dispatch_time,"%m/%d/%y %H:%M:%S") | table _time app user savedsearch_name alert_actions fired dispatch_time_2 |

[Admin - List of Fields available]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","appid","authRequestLogin","branch","path","start","index","cq_ck","dc","date_hour","action","bytes","clientip","count","earliest","f_count","f_ns","f_pwnr","file","form_keyword_field","form_keyword_field_sec","form_index","form_field1_earliest","form_field1_latest","status","uri","uri_path","user","timestartpos","uri_query","useragent","redirecting","referer","referer_domain","ns","method","msgid","pwnr","root","spent","redirect_override","target","suser","msg","vendor","product","src","tag","cef_version","cef_severity","cef_rulename","cef_prodversion","TrendMicroDsTenantId","TrendMicroDsTenant"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
request.ui_dispatch_app = Q_Monitor
request.ui_dispatch_view = search
search = | inputlookup list_fields.csv | stats values(fields) by sourcetype

[Admin - List of Searches]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","appid","authRequestLogin","branch","path","start","index","cq_ck","dc","date_hour","action","bytes","clientip","count","earliest","f_count","f_ns","f_pwnr","file","form_keyword_field","form_keyword_field_sec","form_index","form_field1_earliest","form_field1_latest","status","uri","uri_path","user","timestartpos","uri_query","useragent","redirecting","referer","referer_domain","ns","method","msgid","pwnr","root","spent","redirect_override"]
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
request.ui_dispatch_app = Q_Monitor
request.ui_dispatch_view = search
search = | rest /services/search/jobs |rename custom.search as customSearch|search NOT author="splunk-system-user" | eval SearchString=if(isnotnull(customSearch),customSearch,eventSearch)| addtotals fieldname=duration *duration_secs  | eval search_time=tostring(duration, "duration")| table author,SearchString ,request.earliest_time,  eventCount, search_time | sort -search_time

[Admin - Splunk Internal Error and Warn]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","appid","authRequestLogin","branch","path","start","index","cq_ck","dc","date_hour","action","bytes","clientip","count","earliest","f_count","f_ns","f_pwnr","file","form_keyword_field","form_keyword_field_sec","form_index","form_field1_earliest","form_field1_latest","status","uri","uri_path","user","timestartpos","uri_query","useragent","redirecting","referer","referer_domain","ns","method","msgid","pwnr","root","spent","redirect_override","target","suser","msg","vendor","product","src","tag","cef_version","cef_severity","cef_rulename","cef_prodversion","TrendMicroDsTenantId","TrendMicroDsTenant"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
request.ui_dispatch_app = Q_Monitor
request.ui_dispatch_view = search
search = index=_internal source="*splunkd.log" log_level!=INFO  | stats last(_time) AS "First Occurrence" first(_time) AS "Latest Occurrence" count by component, log_level, message | rename host AS Server component AS Component log_level AS "Log Level" message AS Message | sort - count | convert ctime("Latest Occurrence") ctime("First Occurrence")

[Admin - User Searches and Run Time]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","appid","authRequestLogin","branch","path","start","index","cq_ck","dc","date_hour","action","bytes","clientip","count","earliest","f_count","f_ns","f_pwnr","file","form_keyword_field","form_keyword_field_sec","form_index","form_field1_earliest","form_field1_latest","status","uri","uri_path","user","timestartpos","uri_query","useragent","redirecting","referer","referer_domain","ns","method","msgid","pwnr","root","spent","redirect_override","target","suser","msg","vendor","product","src","tag","cef_version","cef_severity","cef_rulename","cef_prodversion","TrendMicroDsTenantId","TrendMicroDsTenant"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.statistics.rowNumbers = 1
display.visualizations.show = 0
request.ui_dispatch_app = Q_Monitor
request.ui_dispatch_view = search
search = index=_audit host=* action=search user!=splunk-system-user search_id=* (info=granted OR info=completed) |rex field=apiStartTime "'(?<start_time>[^']+)'" |rex field=apiEndTime "'(?<end_time>[^']+)'" | eval search_id = trim(if(isnull(search_id), id, search_id), "'") | eval run_time_min=round(total_run_time/60,2) |eval range=if(start_time=="ZERO_TIME","All Time", tostring(strptime(end_time, "%a %b %d %H:%M:%S %Y") - strptime(start_time, "%a %b %d %H:%M:%S %Y"),"duration")) | stats earliest(_time) AS "Start Time" latest(_time) AS "End Time" values(start_time) AS "Search Earliest" values(end_time) AS "Search Latest" count values(range) AS range values(search) AS Search values(user) AS User max(run_time_min) AS "RunTime(Min)" by search_id | convert ctime(*Time) | where count>1 | rename search_id AS SID range AS "Search Range" | table "Start Time" "End Time" SID Search User "RunTime(Min)" "Search Range" "Search Earliest" "Search Latest"| sort - "Run Time (Min)" | sort - RunTime(Min)

[Admin - Users and Roles]
action.email.useNSSubject = 1
alert.track = 0
description = List of Users and Roles
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = Q_Monitor
request.ui_dispatch_view = search
search = |rest /services/authentication/users splunk_server=local \
 |fields title roles realname|rename title as userName|rename realname as Name

[Admin - Users and Searches]
action.email.useNSSubject = 1
alert.track = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = Q_Monitor
request.ui_dispatch_view = search
search = index=_audit action=search (id=* OR search_id=*) | eval search_id = if(isnull(search_id), id, search_id) | replace '*' with * in search_id |  rex "search='(?<search>.*?)', autojoin" | search search_id!=scheduler_* | convert num(total_run_time) | eval user = if(user="n/a", null(), user) | stats min(_time) as _time first(user) as user max(total_run_time) as total_run_time first(search) as search by search_id | search search=search* search!=*_internal* search!=*_audit* | chart median(total_run_time) as "Median search time" perc95(total_run_time) as "95th Percentile search time" sum(total_run_time) as "Total search time" count as "Search count" max(_time) as "Last use" by user | fieldformat "Last use" = strftime('Last use', "%F %T.%Q %:z")

[Admin - List of Saved Searches]
action.email.useNSSubject = 1
alert.track = 0
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = Q_Monitor
request.ui_dispatch_view = search
search = | rest /servicesNS/-/-/saved/searches splunk_server=local  | eval state=if(disabled=0,"Enabled","Disabled") | eval is_scheduled=if(is_scheduled=1,"Yes","No") | rename title AS savedsearch_name | fields author eai:acl.app cron_schedule state  is_scheduled savedsearch_name search dispatch.earliest_time dispatch.latest_time | search state=Enabled is_scheduled=Yes | table savedsearch_name, search author eai:acl.app cron_schedule state is_scheduled

[Slideshow Views Supportability]
display.general.enablePreview = 1
display.general.timeRangePicker.show = false
display.general.type = statistics
display.visualizations.show = 1
enableSched = 0
search = | rest /services/data/ui/views  | eval sharing='eai:acl.sharing' | eval possible_issue="" | eval possible_issue=if(sharing=="app", "View is not shared", possible_issue) | eval possible_issue=if('eai:acl.perms.read' == "*", possible_issue, "View is not readable by all users") | eval possible_issue=if(isVisible=0,"View is set to invisible", possible_issue) | eval possible_issue=if(like('eai:data', "%type=\"redirect\"%"),"View is just a redirect", possible_issue) | eval warnings=if(possible_issue=="","no", "yes") | eval possible_issue=if(possible_issue == "", "No issues noted", possible_issue) | table title warnings possible_issue
